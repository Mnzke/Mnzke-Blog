<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mnzke Blog</title>
  
  <subtitle>Here are some of my sharing on technical learning</subtitle>
  <link href="http://mnzke.cn/atom.xml" rel="self"/>
  
  <link href="http://mnzke.cn/"/>
  <updated>2021-12-03T13:53:01.070Z</updated>
  <id>http://mnzke.cn/</id>
  
  <author>
    <name>Mznke</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>鸿蒙开发   1.2  组件布局和事件</title>
    <link href="http://mnzke.cn/2021/12/01/newpapername/"/>
    <id>http://mnzke.cn/2021/12/01/newpapername/</id>
    <published>2021-12-01T04:38:41.000Z</published>
    <updated>2021-12-03T13:53:01.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组件布局和事件"><a href="#组件布局和事件" class="headerlink" title="组件布局和事件"></a>组件布局和事件</h1><h2 id="单击事件"><a href="#单击事件" class="headerlink" title="单击事件"></a>单击事件</h2><p>在那个界面搭建组件就在那个界面的XML文件中去写组件</p><p>button组件</p><p>在XML中配置button,注意XML文件的注释不能写在标记里</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--ability_main.XML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">ohos:id</span>=<span class="string">&quot;$+id:but1&quot;</span>           </span></span><br><span class="line"><span class="tag">        <span class="attr">ohos:height</span>=<span class="string">&quot;match_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">ohos:width</span>=<span class="string">&quot;match_content&quot;</span>    </span></span><br><span class="line"><span class="tag">        <span class="attr">ohos:text</span>=<span class="string">&quot;点我&quot;</span>               </span></span><br><span class="line"><span class="tag">        <span class="attr">ohos:text_size</span>=<span class="string">&quot;200&quot;</span>          </span></span><br><span class="line"><span class="tag">        <span class="attr">ohos:background_element</span>=<span class="string">&quot;red&quot;</span> </span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- match_parent表示让当前控件的大小和父布局的大小一样，也就是由父布局来决定当前控件的大小</span></span><br><span class="line"><span class="comment">     wrap_content表示让当前的控件大小能够刚好包含里面的内容，也就是由控件内容决定当前控件的大小 --&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在MainAbilitySlice.java的class MainAbilitySlice下的onStart方法中写，以调用XML文件中的配置</span></span><br><span class="line"><span class="keyword">super</span>.setUIContent(ResourceTable.Layout_ability_main);</span><br></pre></td></tr></table></figure><p>同样一下操作我们需要在在<em>MainAbilitySlice.java</em>的<em>class  MainAbilitySlice</em>下的<em>onStart</em>方法中写，给按钮创建事件。</p><ol><li>通过id找到组件</li><li>给按钮组件设置单击事件</li><li>写一个类实现<em>ClickedListener</em>接口并重写<em>onClick</em>方法</li><li>编写onClick方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//onStart方法中写</span></span><br><span class="line"><span class="comment">//1.找到按钮</span></span><br><span class="line">        Button btn =(Button)findComponentById(ResourceTable.Id_but1);</span><br><span class="line"> <span class="comment">//2.给按钮绑定事件</span></span><br><span class="line">        btn.setClickedListener(<span class="keyword">new</span> MyListener());</span><br><span class="line">    <span class="comment">//函数参数是一个Component类下的内部接口ClickedListener的实现类，所以需要我们自己创建一个该接口的实现类，如下</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//class MainAbilitySlice中创建ClickedListener接口的实现类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">Component</span>.<span class="title">ClickedListener</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(Component component)</span> </span>&#123;</span><br><span class="line">        Button btn = (Button)component;<span class="comment">//component是所有组件的父类，及点谁component就是谁的对象</span></span><br><span class="line">        btn.setText(<span class="string">&quot;被点了&quot;</span>);</span><br><span class="line">        <span class="comment">//如果要用component调用子类方法需要强转,下转型对象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>ResourceTable</em>是鸿蒙提供的一个资源类，里面有所有资源变量，是static类型所以直接用类名调用</p><p>单击事件的四种写法：</p><ol><li>定义实现类</li><li>当前类作为实现类</li><li>匿名内部类 </li><li>方法引用</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;组件布局和事件&quot;&gt;&lt;a href=&quot;#组件布局和事件&quot; class=&quot;headerlink&quot; title=&quot;组件布局和事件&quot;&gt;&lt;/a&gt;组件布局和事件&lt;/h1&gt;&lt;h2 id=&quot;单击事件&quot;&gt;&lt;a href=&quot;#单击事件&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="鸿蒙开发" scheme="http://mnzke.cn/categories/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://mnzke.cn/2021/12/01/hello-world/"/>
    <id>http://mnzke.cn/2021/12/01/hello-world/</id>
    <published>2021-12-01T02:32:49.000Z</published>
    <updated>2021-12-01T14:45:27.511Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="算法" scheme="http://mnzke.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
</feed>
